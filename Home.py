#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.1
#  in conjunction with Tcl version 8.6
#    Feb 22, 2020 06:27:33 PM IST  platform: Windows NT

import sys
import os.path
import numpy as np
# from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
from pandas import DataFrame
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from PIL import ImageTk, Image
import graph_backend as graph

from tkinter import PhotoImage, Label

from MasterChart import displayMasterChart
import addGoat
import alerts
import Finance

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Home_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    top = Toplevel1 (root)
    Home_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    Home_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):

        breed1 = graph.getbreed1()
        breed2 = graph.getbreed2()
        data1 = {'Breed': ['breed1','breed2'],
                 'Number': [breed1,breed2]
                }
        df1 = DataFrame(data1,columns=['Breed','Number'])
        male = graph.getmale()
        female = graph.getfemale()
                # df1 = DataFrame(data1,columns=['Breed','Number'])

        data2 = {'Year': [1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],
                 'Unemployment_Rate': [9.8,12,8,7.2,6.9,7,6.5,6.2,5.5,6.3]
                }
        df2 = DataFrame(data2,columns=['Year','Unemployment_Rate'])


        data3 = {'Gender': ['Male','Female'],
                 'Number': [male,female]
                }  
        df3 = DataFrame(data3,columns=['Gender','Number'])

        birth = graph.getBirth()
        death = graph.getDeath()

        labels = 'birth rate','death rate'
        sizes = [birth, death]
        colors = ['lightcoral', 'lightskyblue']

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1300x760+20+20")
        top.minsize(800, 500)
        top.maxsize(1500, 750)
        top.resizable(0, 0)
        top.title("Home")
        top.configure(background="#f3f3f3")
        top.configure(cursor="watch")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#090000")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.1, rely=0.005, height=400, width=644)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,"boer.jpg")
        global _img0
        _img0 = ImageTk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.Button2 = tk.Button(top,command = lambda: Finance.create_Toplevel1(root))
        self.Button2.place(relx=0.792, rely=0.157, height=53, width=215)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(font="-family {Segoe UI} -size 14")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Finance''')

        self.Button3 = tk.Button(top, command=lambda: addGoat.create_Toplevel1(root))
        self.Button3.place(relx=0.792, rely=0.271, height=53, width=215)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(font="-family {Segoe UI} -size 14")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Add Goat''')

        self.Button2_2 = tk.Button(top, command=self.openMasterChart)
        self.Button2_2.place(relx=0.792, rely=0.041, height=54, width=215)
        self.Button2_2.configure(activebackground="#ececec")
        self.Button2_2.configure(activeforeground="#000000")
        self.Button2_2.configure(background="#d9d9d9")
        self.Button2_2.configure(disabledforeground="#a3a3a3")
        self.Button2_2.configure(font="-family {Segoe UI} -size 14")
        self.Button2_2.configure(foreground="#000000")
        self.Button2_2.configure(highlightbackground="#d9d9d9")
        self.Button2_2.configure(highlightcolor="black")
        self.Button2_2.configure(pady="0")
        self.Button2_2.configure(text='''Master Database''')

        self.Button2_3 = tk.Button(top,command=lambda: alerts.create_Toplevel1(root))
        self.Button2_3.place(relx=0.742, rely=0.4, height=119, width=277)
        self.Button2_3.configure(activebackground="#ececec")
        self.Button2_3.configure(activeforeground="#000000")
        self.Button2_3.configure(background="#d9d9d9")
        self.Button2_3.configure(disabledforeground="#a3a3a3")
        self.Button2_3.configure(font="-family {Segoe UI} -size 14")
        self.Button2_3.configure(foreground="#000000")
        self.Button2_3.configure(highlightbackground="#d9d9d9")
        self.Button2_3.configure(highlightcolor="black")
        self.Button2_3.configure(pady="0")
        self.Button2_3.configure(text='''Alerts''')

        figure1 = plt.Figure(figsize=(4,4), dpi=60)
        ax1 = figure1.add_subplot(111)
        bar1 = FigureCanvasTkAgg(figure1, root)
        # bar1.get_tk_widget().pack(side=tk.LEFT, fill=tk.NONE,padx=8)
        bar1.get_tk_widget().place(x=20,y=500)
        df1 = df1[['Breed','Number']]
        df1.plot(kind='bar', legend=True, ax=ax1, fontsize=10)
        ax1.set_title('Breeds Vs Number')

        figure2 = plt.Figure(figsize=(4,4), dpi=60)
        ax2 = figure2.add_subplot(111)
        line2 = FigureCanvasTkAgg(figure2, root)
        # line2.get_tk_widget().pack(side=tk.LEFT, fill=tk.NONE,padx=8)
        line2.get_tk_widget().place(x=280,y=500)
        df2 = df2[['Year','Unemployment_Rate']].groupby('Year').sum()
        df2.plot(kind='line', legend=True, ax=ax2, color='r',marker='o', fontsize=5)
        ax2.set_title('') 

        figure3 = plt.Figure(figsize=(4,4), dpi=60)
        ax3 = figure3.add_subplot(111)
        bar3 = FigureCanvasTkAgg(figure3, root)
        # bar1.get_tk_widget().pack(side=tk.LEFT, fill=tk.NONE,padx=8)
        bar3.get_tk_widget().place(x=540,y=500)
        df3 = df3[['Gender','Number']]
        df3.plot(kind='bar', legend=True, ax=ax3, fontsize=10)
        ax3.set_title('Gender Vs Number')

        # figure3 = plt.Figure(figsize=(4,4), dpi=60)
        # ax3 = figure3.add_subplot(111)
        # ax3.scatter(df3['Interest_Rate'],df3['Stock_Index_Price'], color = 'g')
        # scatter3 = FigureCanvasTkAgg(figure3, root) 
        # # scatter3.get_tk_widget().pack(side=tk.LEFT, fill=tk.NONE,padx=8)
        # scatter3.get_tk_widget().place(x=570,y=420)
        # ax3.legend() 
        # ax3.set_xlabel('Interest Rate')
        # ax3.set_title('Interest Rate Vs. Stock Index Price')

        figure4 = plt.Figure(figsize=(4,4), dpi=60)
        ax4 = figure4.add_subplot(111)
        ax4.pie(sizes, labels=labels, colors=colors)
        pie4 =  FigureCanvasTkAgg(figure4, root) 
        pie4.get_tk_widget().place(x=800,y=500)
        ax4.legend()
        ax4.set_title('Birth-Death Rate')
             
    def openMasterChart(self):
        displayMasterChart()
        
if __name__ == '__main__':
    vp_start_gui()





